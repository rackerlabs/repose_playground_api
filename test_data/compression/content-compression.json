{
  "name": "content-compression",
  "items": [
    {
      "required": "required",
      "minOccurs": "1",
      "name": "compression",
      "items": [
        {
          "xsd-type": "attribute",
          "default": "false",
          "name": "debug",
          "type": "boolean",
          "required": "optional",
          "doc": "Debug to servlet log This attribute is deprecated. Logging can be\n                        controlled through the log4j2.xml file\n                    "
        },
        {
          "xsd-type": "attribute",
          "default": "1024",
          "name": "compression-threshold",
          "type": "int",
          "minInclusive": "0",
          "required": "optional",
          "doc": "sets the size of the smallest response that will be compressed, in\n                        bytes. That is, if less than compressionThreshold bytes are written to the\n                        response, it will not be compressed and the response will go to the client\n                        unmodified. If 0, compression always begins immediately. Defaults to 1024.\n                    "
        },
        {
          "xsd-type": "attribute",
          "default": "false",
          "name": "statsEnabled",
          "type": "boolean",
          "required": "optional",
          "doc": "enables collection of statistics. This option is deprecated."
        },
        {
          "xsd-type": "attribute",
          "name": "include-content-types",
          "type": "multi-select",
          "sub-type":"string",
          "required": "optional",
          "doc": "if specified, this is treated as a space seperated list of content types\n                        (e.g. text/html,text/xml). The filter will attempt to only compress\n                        responses which specify one of these values as its content type, for example\n                        via ServletResponse.setContentType(String). Note that the filter does not\n                        know the response content type at the time it is applied, and so must apply\n                        itself and later attempt to disable compression when content type has been\n                        set. This will fail if the response has already been committed. Also note\n                        that this parameter cannot be specified if exclude-content-types is also\n                        configured.\n                    "
        },
        {
          "xsd-type": "attribute",
          "name": "exclude-content-types",
          "type": "multi-select",
          "sub-type":"string",
          "required": "optional",
          "doc": "same as above, but specifies a list of content types to not compress.\n                        Everything else will be compressed. However note that any content type that\n                        indicates a compressed format (e.g. application/gzip,\n                        application/x-compress) will not be compressed in any event.\n                    "
        },
        {
          "xsd-type": "attribute",
          "name": "include-user-agent-patterns",
          "type": "multi-select",
          "sub-type":"string",
          "required": "optional",
          "doc": "Only requests with User-Agent headers whose value matches one of these\n                        regular expressions will be compressed. Can't be specified if\n                        excludeUserAgentPatterns is also configured. This option is deprecated.\n                        Please refer to\n                        Java Regular Expression Api\n                        \n                        for more information on regular\n                        expression syntax.\n                    "
        },
        {
          "xsd-type": "attribute",
          "name": "exclude-user-agent-patterns",
          "type": "multi-select",
          "sub-type":"string",
          "required": "optional",
          "doc": "as above, requests whose User-Agent header matches one of these patterns\n                        will not be compressed. This option is deprecated. Please refer to\n                        Java Regular Expression Api\n                        \n                        for more information on regular\n                        expression syntax.\n                    "
        }
      ],
      "doc": "Exposes compressing filter configuration",
      "assert": [
        {
          "message": "Enumerating include-content-type and exclude-content-type is not allowed",
          "formula": "if (@include-content-types) then not (@exclude-content-types) else true()"
        },
        {
          "message": "Enumerating include-content-type and exclude-content-type is not allowed",
          "formula": "if (@include-user-agent-patterns) then not (@exclude-user-agent-patterns) else true()"
        }
      ],
      "type": "entry",
      "maxOccurs": "1"
    }
  ],
  "doc": "The Compression filter is a way for Repose to decompress request data and\n                    compress response data.\n                The following compression methods are supported.\n - gzip\n - x-gzip\n - deflate\n\n"
}